# Generated by Django 5.0.1 on 2025-10-25 08:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('environment', models.CharField(choices=[('development', 'Development'), ('staging', 'Staging'), ('production', 'Production')], default='development', max_length=50)),
                ('provider', models.CharField(choices=[('aws', 'AWS EKS'), ('azure', 'Azure AKS'), ('gcp', 'Google GKE'), ('on-premise', 'On-Premise'), ('other', 'Other')], default='on-premise', max_length=50)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('api_server_url', models.URLField()),
                ('encrypted_kubeconfig', models.BinaryField()),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('critical', 'Critical'), ('offline', 'Offline')], default='offline', max_length=20)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('node_count', models.IntegerField(default=0)),
                ('pod_count', models.IntegerField(default=0)),
                ('namespace_count', models.IntegerField(default=0)),
                ('kubernetes_dashboard_url', models.URLField(blank=True, null=True)),
                ('kiali_dashboard_url', models.URLField(blank=True, null=True)),
                ('argocd_dashboard_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kubernetes_clusters',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(default='default', max_length=255)),
                ('replicas', models.IntegerField(default=1)),
                ('ready_replicas', models.IntegerField(default=0)),
                ('available_replicas', models.IntegerField(default=0)),
                ('image', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'kubernetes_deployments',
                'ordering': ['cluster', 'namespace', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Ready', 'Ready'), ('NotReady', 'Not Ready'), ('Unknown', 'Unknown')], default='Unknown', max_length=20)),
                ('role', models.CharField(choices=[('master', 'Master'), ('worker', 'Worker')], default='worker', max_length=20)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=100)),
                ('cpu_capacity', models.CharField(blank=True, max_length=50)),
                ('memory_capacity', models.CharField(blank=True, max_length=50)),
                ('cpu_usage', models.FloatField(blank=True, help_text='CPU usage percentage', null=True)),
                ('memory_usage', models.FloatField(blank=True, help_text='Memory usage percentage', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'kubernetes_nodes',
                'ordering': ['cluster', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Pod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(default='default', max_length=255)),
                ('status', models.CharField(choices=[('Running', 'Running'), ('Pending', 'Pending'), ('Succeeded', 'Succeeded'), ('Failed', 'Failed'), ('Unknown', 'Unknown')], default='Unknown', max_length=20)),
                ('node', models.CharField(blank=True, max_length=255)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('cpu_usage', models.CharField(blank=True, max_length=50)),
                ('memory_usage', models.CharField(blank=True, max_length=50)),
                ('restarts', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'kubernetes_pods',
                'ordering': ['cluster', 'namespace', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(default='default', max_length=255)),
                ('service_type', models.CharField(choices=[('ClusterIP', 'ClusterIP'), ('NodePort', 'NodePort'), ('LoadBalancer', 'LoadBalancer'), ('ExternalName', 'ExternalName')], default='ClusterIP', max_length=50)),
                ('cluster_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('external_ip', models.CharField(blank=True, max_length=255)),
                ('ports', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'kubernetes_services',
                'ordering': ['cluster', 'namespace', 'name'],
            },
        ),
    ]
